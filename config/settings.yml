logger:
  level: <%= ENV['LOGGER_LEVEL'] || WARN %>
  stdout: <%= ENV['LOGGER_STDOUT'] %>

application:
  # Set to true if testing production env without Apache/Nginx
  serve_static_assets: false
  # Set if running behind Apache/Nginx + https
  # protocol: "https://"
  fake_cas: false
  fake_cas_id: "1" # Change this to the UID you want to fake cas auth with.

cas_server: 'localhost:1234/cas'
cas_logout_url: 'https://localhost:4321/cas/logout'

# Database settings
postgres:
  database: calcentral_production
  username: calcentral_production
  password: secret
  host: localhost
  port: 5432
  pool: 95

campusdb:
  adapter: h2
  driver: org.h2.Driver
  url: jdbc:h2:mem:h2CampusDataSource;DB_CLOSE_DELAY=-1;MODE=Oracle
  username: sa
  password: sa
  pool: 95
  # Needed when the bSpace application tables are in a different namespace.
  bspace_prefix:
test_sqlite:
  pool: 3

# Proxy support
freshen_vcr: <%= ENV['freshen_vcr'] %>
# MUST BE SET FOR DEVELOPMENT & PRODUCTION
# Example generated with SecureRandom.base64(32)
oauth2:
  key: "IeGpe9iq27Glqujd8pGH1+xM8C/ofm97Lp74N+6cN0I="
  encryption: "aes-256-cbc"

# Proxy settings
# Set "fake: true" for any inaccessible ones
canvas_proxy:
  admin_access_token: "someMumboJumbo"
  url_root: "http://localhost:12345"
  fake: false
  client_id: 2
  client_secret: "someMumboJumbo"
  account_id: '90242'
  export_directory: 'tmp/canvas'
  lti_key: 'someMumboJumbo'
  lti_secret: 'someMumboJumbo'
  # Only used for testing + recording responses
  test_user_id: "300846"
  test_user_access_token: "someMumboJumbo"
  current_terms_codes: [
    {
      term_yr: "2013",
      term_cd: "D"
    }
  ]
  mixed_sis_user_id: false
google_proxy:
  client_id: 1
  client_secret: 'someMumboJumbo'
  fake: false
  #Maps to tammi.chang.clc@gmail.com. Used for testing + recording responses
  test_user_access_token: "someMumboJumbo"
  test_user_refresh_token: "someMumboJumbo"
  atom_mail_feed_url: "https://mail.google.com/mail/feed/atom/"
sakai_proxy:
  host: "https://sakai-dev.berkeley.edu"
  fake: false
  fake_user_id: "300939"
  current_terms: ["Fall 2013"]
  current_terms_codes: [ {
    term_yr: "2013",
    term_cd: "D"
  }]
  # Timestamp in UTC, needed when testing against older DB snapshot
  fake_now:
cal_link_proxy:
  fake: false
  base_url: "https://callink.berkeley.edu"
  public_key: secret set in production
  private_key: secret set in production

bearfacts_proxy:
  fake: false
  token: secret set per deployment layer
  app_id: ''
  app_key: ''
  base_url: "https://apis-dev.berkeley.edu/bearfacts-apis"

blog_latest_release_notes_feed_proxy:
  fake: false
  feed_url: "https://ets.berkeley.edu/taxonomy/term/788/all/feed"

# Analytics settings ID
# This will need to be different for every server (dev/qa/production)
google_analytics_id: UA-XXXXXX-X

# Sentry URL
# We use https://getsentry.com for our JavaScript Error logging
sentry_url: "https://facf7ad7bd7047f0a356e9322107ce50@app.getsentry.com/7185"

# Cache settings. 0 means never expire.
# WARNING: memcached's upper limit is 30 days. Specifying longer expiration than that will
# result in entries expiring instantly.
cache:
  # Array of server addresses in cluster (for memcached)
  servers: ["localhost"]
  maximum_expires_in: <%= 29.days %>
  race_condition_ttl: <%= 10.seconds %>
  stale_connection_flush_interval: <%= 30.seconds %>
  expiration:
    default: <%= 35.minutes %>
    MyAcademics::Merged: 0
    MyActivities: 0
    MyBadges::Merged: 0
    MyCampusLinksController: 0
    MyClasses: 0
    MyGroups: 0
    MyTasks::Merged: 0
    MyUpNext: 0
    MyRefreshController: <%= 30.seconds %>
    UserApi: 0
    UserApiController: <%= 4.hours %>
    CanvasLti: <%= 5.minutes %>
    CanvasCourseStudentsProxy: <%= 15.minutes %>
    CanvasCourseTeachersProxy: <%= 5.minutes %>
    MyRegBlocks: <%= 10.minutes %>

# Cache warmer settings
cache_warmer:
  # Number to decrement db pool to limit the number of warmer threads
  fudge_factor: 1

# Bearfacts JMS event queue
ist_jms:
  url: tcp://localhost:61616
  queue: testqueue
#  username: USERNAME
#  password: PASSWORD
  freshen_recording: false
  fake: true
  enabled: true

# This will enable http basic auth for the app and should NEVER be enabled in production
developer_auth:
  enabled: false
  password: topsecret!

hot_plate:
  last_visit_cutoff: <%= 10.days %>
  enabled: true

user_whitelist:
  first_year_codes: [
    {
      term_yr: "2013",
      term_cd: "D"
    },
    {
      term_yr: "2014",
      term_cd: "B"
    }
  ]

# Used for campus_data get_enrolled_sections, get_instructing_sections
academic_terms:
  student:
    term_yr: "2013"
    term_cd: "D"
  instructor:
    term_yr: "2013"
    term_cd: "D"

# feature toggles. If a feature's key is false OR nil, it's disabled.
features:
  live_campus_links_data: false
  user_whitelist: false
  academic_status: false
